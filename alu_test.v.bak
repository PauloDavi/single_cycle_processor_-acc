module alu_test;
  reg [7:0]reg_a, reg_b;
  reg [2:0]select;
  wire [7:0]out;
  wire zero_flag, carrier_flag, negative_flag;

	alu dll(
    .reg_a(reg_a),
    .reg_b(reg_b),
    .select(select),
    .out(out),
    .zero_flag(zero_flag),
    .carrier_flag(carrier_flag),
    .negative_flag(negative_flag));

  initial begin
    reg_a <= 8'd10;
    reg_b <= 8'd20;
    select <= 3'd0;

    #1 reg_a <= 8'd30;
    #1 reg_b <= 8'd40;
    #1 select <= 3'd1;

    #2 reg_a <= 8'd30;
    #2 reg_b <= 8'd30;
    #2 select <= 3'd1;

    #3 reg_a <= 8'd150;
    #3 select <= 3'd2;

    #4 reg_a <= 8'd30;
    #4 select <= 3'd3;

    #5 reg_a <= 8'd30;
    #5 select <= 3'd4;

    #6 reg_a <= 8'b00001111;
    #6 reg_b <= 8'b00000101;
    #6 select <= 3'd5;

    #7 reg_a <= 8'b00100100;
    #7 reg_b <= 8'b10001000;
    #7 select <= 3'd6;

    #8 reg_a <= 8'b00110011;
    #8 reg_b <= 8'b01110100;
    #8 select <= 3'd7;
  end
endmodule